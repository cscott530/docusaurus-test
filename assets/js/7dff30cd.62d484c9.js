"use strict";(self.webpackChunkdocs_test=self.webpackChunkdocs_test||[]).push([[7262],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(r),f=o,h=c["".concat(l,".").concat(f)]||c[f]||d[f]||a;return r?n.createElement(h,s(s({ref:t},p),{},{components:r})):n.createElement(h,s({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var u=2;u<a;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},8073:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return c}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),s=["components"],i={},l="GraphQL",u={unversionedId:"wordpress/for-devs/modifying-graphql",id:"wordpress/for-devs/modifying-graphql",isDocsHomePage:!1,title:"GraphQL",description:"The WordPress GraphQL plugin supports many hooks/filters to be able to modify data.",source:"@site/docs/wordpress/for-devs/modifying-graphql.md",sourceDirName:"wordpress/for-devs",slug:"/wordpress/for-devs/modifying-graphql",permalink:"/docusaurus-test/docs/wordpress/for-devs/modifying-graphql",editUrl:"https://github.com/cscott530/docusaurus-test/blob/main/docs/wordpress/for-devs/modifying-graphql.md",tags:[],version:"current",lastUpdatedBy:"Chris Scott",lastUpdatedAt:1636473764,formattedLastUpdatedAt:"11/9/2021",frontMatter:{},sidebar:"wordpressSidebar",previous:{title:"Filters",permalink:"/docusaurus-test/docs/wordpress/for-devs/filters"}},p=[{value:"Resetting Permalink",id:"resetting-permalink",children:[],level:3},{value:"Including Unpublished Authors",id:"including-unpublished-authors",children:[],level:3}],d={toc:p};function c(e){var t=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"graphql"},"GraphQL"),(0,a.kt)("p",null,"The WordPress GraphQL plugin supports many hooks/filters to be able to modify data."),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"https://www.wpgraphql.com/"},"their docs")," for an exhaustive list."),(0,a.kt)("h3",{id:"resetting-permalink"},"Resetting Permalink"),(0,a.kt)("p",null,"As noted in the ",(0,a.kt)("a",{parentName:"p",href:"/docusaurus-test/docs/wordpress/for-devs/filters"},"filters")," page, we modify the permalink value for posts/pages globally. This works great for Blog2Social, but causes the ",(0,a.kt)("inlineCode",{parentName:"p"},"uri")," value served up by WPGraphQL to include the full domain (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"https://development.insiderintelligence.com/insights/my-post")," instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"/insights/my-post/"),"). This is problematic, because when Gatsby reads that in, it attempts to create a page with ",(0,a.kt)("em",{parentName:"p"},"that")," as the relative path. So we need to pull it back out:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"add_filter( 'graphql_resolve_field', function( $result, $source, $args, $context, $info, $type_name, $field_key, $field, $field_resolver ) {\n    $domain = get_domain();\n\n    if (strlen($domain) > 0) {\n        // WpGraphQL uses a similar value for 'link' and 'uri', even though we don't use 'link' in Gatsby,\n        //  let's filter out the full domain from both just to be safe.\n        if (in_array(strtolower($type_name), ['post', 'page'])\n            && in_array(strtolower($field_key), ['uri', 'link'])) {\n\n            return str_replace($domain, '', $result);\n        }\n    }\n\n    return $result;\n}, 10, 9 );\n")),(0,a.kt)("h3",{id:"including-unpublished-authors"},"Including Unpublished Authors"),(0,a.kt)("p",null,"By default, a user only shows up in the users query when they have published a page or post. However, because additional authors is an add-on we built ourselves, the out-of-the-box logic is to only look at the primary author on a page. If a user has only appeared as a secondary author, by default, they will not be returned by WPGraphQL."),(0,a.kt)("p",null,"This is from ",(0,a.kt)("inlineCode",{parentName:"p"},"extensions/include-unpublished-authors.php"),"."),(0,a.kt)("p",null,"First we need to remove the query argument that checks whether a user has published posts:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"add_filter( 'graphql_connection_query_args', function( $query_args, $connection_resolver ) {\n    if ( $connection_resolver instanceof \\WPGraphQL\\Data\\Connection\\UserConnectionResolver ) {\n        unset( $query_args['has_published_posts'] );\n    }\n    return $query_args;\n}, 10, 2 );\n")),(0,a.kt)("p",null,"And second, to just blindly set all users to public:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"add_filter( 'graphql_object_visibility', function( $visibility, $model_name, $data, $owner, $current_user ) {\n    // only apply our adjustments to the UserObject Model\n    if ( 'UserObject' === $model_name ) {\n        $visibility = 'public';\n    }\n\n    return $visibility;\n}, 10, 5 );\n")))}c.isMDXComponent=!0}}]);